@using Microsoft.AspNetCore.Identity
@model EmployeeMVC.Models.ViewModels.BlogDetailsViewModel
@inject SignInManager<IdentityUser> signinManager
@inject UserManager<IdentityUser> userManager
@{
    ViewData["Title"] = Model.PageTitle;
}

@section Styles {
    <link rel="stylesheet" href="~/css/Blog.css" />
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if (Model != null)
            {
                <h1 class="mb-3">@Model.Heading</h1>

                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">@Model.Author</span>
                    <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
                </div>
                <div class="mb-3">
                    @if (signinManager.IsSignedIn(User))
                    {
                        if (Model.Liked)
                        {
                            <a style="cursor: pointer;">
                                <i class="bi bi-heart-fill"></i>
                            </a>
                        }
                        else
                        {
                            <a id="btnLike" style="cursor:pointer;">
                                <i class="bi bi-heart"></i>
                            </a>
                        }
                    }
                    <span id="totalLikes">@Model.TotalLikes</span> likes
                </div>

                <div class="mb-3 d-flex">
                    @foreach (var tag in Model.Tags)
                    {
                        <span class="badge bg-secondary me-1">@tag.Name</span>
                    }
                </div>

                <img src="~/Images/@Model.FeaturedImageUrl" class="d-block img-fluid mb-3" />

                <div class="mb-3 blog-details-content">
                    @Html.Raw(Model.Content)
                </div>

                <div class="card">
                    <div class="card-header">
                        <h5>Comments</h5>

                        @if (signinManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-3">
                                    <label class="form-label">Comment Description</label>
                                    <input type="text" class="form-control" asp-for="CommentDescription" />
                                </div>

                                <div class="mb-3">
                                    <button type="submit" class="btn btn-dark">Submit</button>
                                    <input type="hidden" asp-for="Id" />
                                    <input type="hidden" asp-for="UrlHandle" />
                                </div>
                            </form>
                        }
                    </div>
                    <div class="card-body">
                        @if (Model.Comments != null && Model.Comments.Any())
                        {
                            @foreach (var comment in Model.Comments)
                            {
                                <div class="card mb-3 comment-container">
                                    <div class="d-flex justify-content-between">
                                        <span class="text-secondary ms-2">@comment.Username</span>
                                        <span class="text-secondary d-flex align-items-center">
                                            @comment.DateAdded.ToShortDateString()
                                            <span class="ms-2">
                                                <a class=" text-secondary text-decoration-none comment-options" data-bs-toggle="dropdown" role="button" style="cursor: pointer;">
                                                    <i class="bi bi-three-dots me-2"></i>
                                                </a>
                                                <ul class="dropdown-menu comment-dropdown">
                                                    <li><a class="dropdown-item text-decoration-none " data-bs-toggle="modal" data-bs-target="#exampleModal"
                                                           asp-action="EditComment" asp-controller="Blog" asp-route-id="@Model.CommentId" style="cursor: pointer;">Edit</a>
                                                    </li>

                                                    <li><a class="dropdown-item text-decoration-none delete-comment" style="cursor: pointer;">Delete</a></li>
                                                </ul>

                                                @* //modal section *@
                                                <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                                    <div class="modal-dialog">
                                                        <div class="modal-content">
                                                            <div class="modal-header">
                                                                <h1 class="modal-title fs-5" id="exampleModalLabel">@comment.Username</h1>
                                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                            </div>
                                                            <div class="modal-body">
                                                                <input type="text" class="form-control" asp-for="CommentDescription" />
                                                            </div>
                                                            <div class="modal-footer">
                                                                <button type="button" class="btn btn-warning" >Edit</button>
                                                                <button type="button" class="btn btn-danger">Delete</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </span>
                                        </span>
                                    </div>
                                    <div class="card-body">
                                        <div>
                                            @comment.Description
                                        </div>
                                    </div>

                                </div>
                            }
                        }
                    </div>
                </div>
            }
            else
            {
                <p>Blog post not found!</p>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const btnLikeElement = document.getElementById('btnLike');
        const totalLikesElement = document.getElementById('totalLikes');

        async function getTotalLikes() {
            fetch('/api/blogPostLike/@Model.Id/totalLikes', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                }
            })
                .then(data => data.json())
                .then(result => totalLikesElement.innerHTML = result);
        }

        async function addLikeForBlog() {
            fetch('/api/BlogPostLike/Add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({
                    blogPostId: '@Model.Id',
                    userId: '@userManager.GetUserId(User)'
                })
            })
                .then(() => {
                    btnLikeElement.innerHTML = '<i class="bi bi-heart-fill"></i>';
                    btnLikeElement.removeEventListener('click', addLikeForBlog);
                    getTotalLikes();
                });
        }

        btnLikeElement.addEventListener('click', addLikeForBlog);

        // Comment edit/delete functionality
       
    </script>
}